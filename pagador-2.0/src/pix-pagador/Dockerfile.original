
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS base
WORKDIR /app

RUN sed -i 's/\[openssl_init\]/# [openssl_init]/' /etc/ssl/openssl.cnf
RUN printf "\n\n[openssl_init]\nssl_conf = ssl_sect" >> /etc/ssl/openssl.cnf
RUN printf "\n\n[ssl_sect]\nsystem_default = ssl_default_sect" >> /etc/ssl/openssl.cnf
RUN printf "\n\n[ssl_default_sect]\nMinProtocol = TLSv1\nCipherString = DEFAULT@SECLEVEL=0\n" >> /etc/ssl/openssl.cnf


ENV DOTNET_GCHeapHardLimitPercent=75
ENV DOTNET_GCConserveMemory=5
ENV DOTNET_EnableDiagnostics=0
ENV DOTNET_TieredCompilation=1 
ENV DOTNET_ReadyToRun=1 
ENV DOTNET_TC_QuickJitForLoops=1 
ENV DOTNET_ThreadPool_UnfairSemaphoreSpinLimit=6

EXPOSE 8080
EXPOSE 8081


# Esta fase é usada para compilar o projeto de serviço
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

COPY ["src/pix-pagador/pix-pagador.csproj", "src/pix-pagador/"]

RUN dotnet restore "src/pix-pagador/pix-pagador.csproj" --runtime linux-x64 --verbosity minimal --disable-parallel

COPY . .

WORKDIR "/src/src/pix-pagador"

RUN dotnet build "pix-pagador.csproj"  -c $BUILD_CONFIGURATION  -o /app/build --no-restore --verbosity minimal   /p:TreatWarningsAsErrors=false   /p:WarningLevel=1

# Esta fase é usada para publicar o projeto de serviço a ser copiado para a fase final
FROM build AS publish
ARG BUILD_CONFIGURATION=Release

RUN dotnet publish "pix-pagador.csproj" \
    -c $BUILD_CONFIGURATION \
    -o /app/publish \
    --no-restore \
    --no-build \
    --verbosity minimal \
    /p:UseAppHost=false \
    /p:PublishReadyToRun=false \
    /p:PublishTrimmed=false \
    /p:InvariantGlobalization=true \
    /p:DebuggerSupport=false \
    /p:EnableUnsafeBinaryFormatterSerialization=false \
    /p:EventSourceSupport=false

RUN find /app/publish -name "*.pdb" -delete && \
    find /app/publish -name "*.xml" -delete && \
    find /app/publish -name "*.deps.json" -delete && \
    rm -rf /app/publish/refs && \
    rm -rf /app/publish/runtimes/win* && \
    rm -rf /app/publish/runtimes/osx*


# Esta fase é usada na produção ou quando executada no VS no modo normal (padrão quando não está usando a configuração de Depuração)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .


ENV ASPNETCORE_FORWARDEDHEADERS_ENABLED=true \
    ASPNETCORE_PATHBASE="" \
    # Threading pool otimizado para OpenShift
    ASPNETCORE_THREADPOOL_MINTHREADS=4 \
    ASPNETCORE_THREADPOOL_MAXTHREADS=25 \
    # Kestrel otimizado
    ASPNETCORE_KESTREL_LIMITS_MAXCONCURRENTCONNECTIONS=1000 \
    ASPNETCORE_KESTREL_LIMITS_MAXREQUESTBODYSIZE=30000000


ENTRYPOINT ["dotnet", "Pagador.WebAPI.dll"]